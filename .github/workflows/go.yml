name: Build and Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build for Windows
        run: |
          go get -v ./...
          GOOS=windows GOARCH=amd64 go build -o golang/windows_amd64.exe ./golang
          GOOS=windows GOARCH=386 go build -o golang/windows_386.exe ./golang

      - name: Build for Linux
        run: |
          go get -v ./...
          GOOS=linux GOARCH=amd64 go build -o golang/linux_amd64 ./golang
          GOOS=linux GOARCH=386 go build -o golang/linux_386 ./golang

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RUIJIE_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Windows Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RUIJIE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: golang/windows_amd64.exe
          asset_name: windows_amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Windows Binaries (386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RUIJIE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: golang/windows_386.exe
          asset_name: windows_386.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RUIJIE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: golang/linux_amd64
          asset_name: linux_amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux Binaries (386)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RUIJIE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: golang/linux_386
          asset_name: linux_386
          asset_content_type: application/octet-stream
